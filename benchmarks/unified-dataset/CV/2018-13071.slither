Compilation warnings/errors on CV/2018-13071.sol:
CV/2018-13071.sol:10:5: Warning: No visibility specified. Defaulting to "public".
    function owned() {
    ^
Spanning multiple lines.
CV/2018-13071.sol:15:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
CV/2018-13071.sol:19:5: Warning: No visibility specified. Defaulting to "public".
    function transferOwnership(address newOwner) onlyOwner {
    ^
Spanning multiple lines.
CV/2018-13071.sol:24:27: Warning: No visibility specified. Defaulting to "public".
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
CV/2018-13071.sol:48:5: Warning: No visibility specified. Defaulting to "public".
    function token(
    ^
Spanning multiple lines.
CV/2018-13071.sol:67:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:68:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
CV/2018-13071.sol:69:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
CV/2018-13071.sol:76:5: Warning: No visibility specified. Defaulting to "public".
    function approve(address _spender, uint256 _value)
    ^
Spanning multiple lines.
CV/2018-13071.sol:83:5: Warning: No visibility specified. Defaulting to "public".
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^
Spanning multiple lines.
CV/2018-13071.sol:93:5: Warning: No visibility specified. Defaulting to "public".
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:94:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
CV/2018-13071.sol:95:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
CV/2018-13071.sol:96:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
CV/2018-13071.sol:105:5: Warning: No visibility specified. Defaulting to "public".
    function () {
    ^
Spanning multiple lines.
CV/2018-13071.sol:106:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
CV/2018-13071.sol:127:5: Warning: No visibility specified. Defaulting to "public".
    function CCindexToken() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^------------------------------------------------------------------------------------^
CV/2018-13071.sol:129:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:131:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
CV/2018-13071.sol:132:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
CV/2018-13071.sol:133:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
CV/2018-13071.sol:153:5: Warning: No visibility specified. Defaulting to "public".
    function getAddresses() constant returns (address[]){
    ^
Spanning multiple lines.
CV/2018-13071.sol:161:5: Warning: No visibility specified. Defaulting to "public".
    function distributeTokens(uint startIndex,uint endIndex) onlyOwner returns (uint) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:184:5: Warning: No visibility specified. Defaulting to "public".
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:185:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
CV/2018-13071.sol:186:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
CV/2018-13071.sol:187:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
CV/2018-13071.sol:188:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
CV/2018-13071.sol:196:5: Warning: No visibility specified. Defaulting to "public".
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^
Spanning multiple lines.
CV/2018-13071.sol:203:5: Warning: No visibility specified. Defaulting to "public".
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^
Spanning multiple lines.
CV/2018-13071.sol:208:5: Warning: No visibility specified. Defaulting to "public".
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^
Spanning multiple lines.
CV/2018-13071.sol:213:5: Warning: No visibility specified. Defaulting to "public".
    function buy() payable {
    ^
Spanning multiple lines.
CV/2018-13071.sol:215:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
CV/2018-13071.sol:221:5: Warning: No visibility specified. Defaulting to "public".
    function sell(uint256 amount) {
    ^
Spanning multiple lines.
CV/2018-13071.sol:222:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
CV/2018-13071.sol:226:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^


CCindexToken (CV/2018-13071.sol#110-232) has incorrect ERC20 function interface:token.transfer(address,uint256) (CV/2018-13071.sol#67-73)
CCindexToken (CV/2018-13071.sol#110-232) has incorrect ERC20 function interface:CCindexToken.transfer(address,uint256) (CV/2018-13071.sol#129-151)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

owned.transferOwnership(address) (CV/2018-13071.sol#19-21) should emit an event for: 
	- owner = newOwner (CV/2018-13071.sol#20) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

CCindexToken.setPrices(uint256,uint256) (CV/2018-13071.sol#208-211) should emit an event for: 
	- sellPrice = newSellPrice (CV/2018-13071.sol#209) 
	- buyPrice = newBuyPrice (CV/2018-13071.sol#210) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

owned.transferOwnership(address).newOwner (CV/2018-13071.sol#19) lacks a zero-check on :
		- owner = newOwner (CV/2018-13071.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Deprecated standard detected THROW (CV/2018-13071.sol#15):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#68):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#69):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#94):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#95):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#96):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#106):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#131):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#132):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#133):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#185):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#186):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#187):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#188):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#215):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#222):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13071.sol#226):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.17 (CV/2018-13071.sol#6) allows old versions
solc-0.4.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (CV/2018-13071.sol#7-22) is not in CapWords
Contract tokenRecipient (CV/2018-13071.sol#24) is not in CapWords
Contract token (CV/2018-13071.sol#26-108) is not in CapWords
Parameter token.transfer(address,uint256)._to (CV/2018-13071.sol#67) is not in mixedCase
Parameter token.transfer(address,uint256)._value (CV/2018-13071.sol#67) is not in mixedCase
Parameter token.approve(address,uint256)._spender (CV/2018-13071.sol#76) is not in mixedCase
Parameter token.approve(address,uint256)._value (CV/2018-13071.sol#76) is not in mixedCase
Parameter token.approveAndCall(address,uint256,bytes)._spender (CV/2018-13071.sol#83) is not in mixedCase
Parameter token.approveAndCall(address,uint256,bytes)._value (CV/2018-13071.sol#83) is not in mixedCase
Parameter token.approveAndCall(address,uint256,bytes)._extraData (CV/2018-13071.sol#83) is not in mixedCase
Parameter token.transferFrom(address,address,uint256)._from (CV/2018-13071.sol#93) is not in mixedCase
Parameter token.transferFrom(address,address,uint256)._to (CV/2018-13071.sol#93) is not in mixedCase
Parameter token.transferFrom(address,address,uint256)._value (CV/2018-13071.sol#93) is not in mixedCase
Parameter CCindexToken.transfer(address,uint256)._to (CV/2018-13071.sol#129) is not in mixedCase
Parameter CCindexToken.transfer(address,uint256)._value (CV/2018-13071.sol#129) is not in mixedCase
Parameter CCindexToken.transferFrom(address,address,uint256)._from (CV/2018-13071.sol#184) is not in mixedCase
Parameter CCindexToken.transferFrom(address,address,uint256)._to (CV/2018-13071.sol#184) is not in mixedCase
Parameter CCindexToken.transferFrom(address,address,uint256)._value (CV/2018-13071.sol#184) is not in mixedCase
Constant CCindexToken.initialSupply (CV/2018-13071.sol#123) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CCindexToken.decimalUnits (CV/2018-13071.sol#124) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in CCindexToken.sell(uint256) (CV/2018-13071.sol#221-230):
	External calls:
	- ! msg.sender.send(amount * sellPrice) (CV/2018-13071.sol#225)
	Event emitted after the call(s):
	- Transfer(msg.sender,this,amount) (CV/2018-13071.sol#228)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

CCindexToken.slitherConstructorConstantVariables() (CV/2018-13071.sol#110-232) uses literals with too many digits:
	- initialSupply = 40000000 * 10 ** 18 (CV/2018-13071.sol#123)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

CCindexToken.tokenName (CV/2018-13071.sol#125) should be constant
CCindexToken.tokenSymbol (CV/2018-13071.sol#126) should be constant
token.standard (CV/2018-13071.sol#28) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (CV/2018-13071.sol#24)
approveAndCall(address,uint256,bytes) should be declared external:
	- token.approveAndCall(address,uint256,bytes) (CV/2018-13071.sol#83-90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
CV/2018-13071.sol analyzed (4 contracts with 80 detectors), 51 result(s) found
