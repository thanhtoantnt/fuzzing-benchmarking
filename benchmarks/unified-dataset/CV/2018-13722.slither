Compilation warnings/errors on CV/2018-13722.sol:
CV/2018-13722.sol:9:3: Warning: No visibility specified. Defaulting to "public".
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
CV/2018-13722.sol:10:3: Warning: No visibility specified. Defaulting to "public".
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
CV/2018-13722.sol:12:3: Warning: No visibility specified. Defaulting to "public".
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
CV/2018-13722.sol:13:3: Warning: No visibility specified. Defaulting to "public".
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
CV/2018-13722.sol:14:3: Warning: No visibility specified. Defaulting to "public".
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
CV/2018-13722.sol:67:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
CV/2018-13722.sol:99:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
CV/2018-13722.sol:104:3: Warning: No visibility specified. Defaulting to "public".
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:111:3: Warning: No visibility specified. Defaulting to "public".
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:124:3: Warning: No visibility specified. Defaulting to "public".
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:128:3: Warning: No visibility specified. Defaulting to "public".
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:134:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
CV/2018-13722.sol:141:3: Warning: No visibility specified. Defaulting to "public".
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:151:3: Warning: No visibility specified. Defaulting to "public".
  function addApproval(address _spender, uint _addedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:165:3: Warning: No visibility specified. Defaulting to "public".
  function subApproval(address _spender, uint _subtractedValue)
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:195:3: Warning: No visibility specified. Defaulting to "public".
  function burn(uint burnAmount) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:267:3: Warning: No visibility specified. Defaulting to "public".
  function UpgradeableToken(address _upgradeMaster) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:279:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
CV/2018-13722.sol:283:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (value == 0) throw;
                      ^---^
CV/2018-13722.sol:303:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
CV/2018-13722.sol:306:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (agent == 0x0) throw;
                        ^---^
CV/2018-13722.sol:308:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
CV/2018-13722.sol:310:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (getUpgradeState() == UpgradeState.Upgrading) throw;
                                                       ^---^
CV/2018-13722.sol:315:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if(!upgradeAgent.isUpgradeAgent()) throw;
                                         ^---^
CV/2018-13722.sol:317:57: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (upgradeAgent.originalSupply() != totalSupply) throw;
                                                        ^---^
CV/2018-13722.sol:338:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (master == 0x0) throw;
                         ^---^
CV/2018-13722.sol:339:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (msg.sender != upgradeMaster) throw;
                                       ^---^
CV/2018-13722.sol:390:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
CV/2018-13722.sol:397:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
CV/2018-13722.sol:402:3: Warning: No visibility specified. Defaulting to "public".
  function HYIPToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals) UpgradeableToken(_owner) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:65:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:107:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
CV/2018-13722.sol:120:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
CV/2018-13722.sol:137:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
CV/2018-13722.sol:156:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
      ^-----------------------------------------------------------^
CV/2018-13722.sol:176:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
      ^-----------------------------------------------------------^
CV/2018-13722.sol:199:5: Warning: Invoking events without "emit" prefix is deprecated.
    Burned(burner, burnAmount);
    ^------------------------^
CV/2018-13722.sol:293:7: Warning: Invoking events without "emit" prefix is deprecated.
      Upgrade(msg.sender, upgradeAgent, value);
      ^--------------------------------------^
CV/2018-13722.sol:319:7: Warning: Invoking events without "emit" prefix is deprecated.
      UpgradeAgentSet(upgradeAgent);
      ^---------------------------^
CV/2018-13722.sol:376:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(0, receiver, amount);
    ^---------------------------^
CV/2018-13722.sol:384:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintingAgentChanged(addr, state);
    ^------------------------------^
CV/2018-13722.sol:49:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:53:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:57:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:61:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:65:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:218:3: Warning: Function state mutability can be restricted to pure
  function isUpgradeAgent() public constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-13722.sol:346:3: Warning: Function state mutability can be restricted to pure
  function canUpgrade() public constant returns(bool) {
  ^ (Relevant source part starts here and spans across multiple lines).


SafeMath.assert(bool) (CV/2018-13722.sol#65-69) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing

UpgradeableToken.UpgradeableToken(address)._upgradeMaster (CV/2018-13722.sol#267) lacks a zero-check on :
		- upgradeMaster = _upgradeMaster (CV/2018-13722.sol#268)
HYIPToken.HYIPToken(address,string,string,uint256,uint256)._owner (CV/2018-13722.sol#402) lacks a zero-check on :
		- owner = _owner (CV/2018-13722.sol#410)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in UpgradeableToken.setUpgradeAgent(address) (CV/2018-13722.sol#299-320):
	External calls:
	- ! upgradeAgent.isUpgradeAgent() (CV/2018-13722.sol#315)
	Event emitted after the call(s):
	- UpgradeAgentSet(upgradeAgent) (CV/2018-13722.sol#319)
Reentrancy in UpgradeableToken.upgrade(uint256) (CV/2018-13722.sol#274-294):
	External calls:
	- upgradeAgent.upgradeFrom(msg.sender,value) (CV/2018-13722.sol#292)
	Event emitted after the call(s):
	- Upgrade(msg.sender,upgradeAgent,value) (CV/2018-13722.sol#293)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

SafeMath.max256(uint256,uint256) (CV/2018-13722.sol#57-59) is never used and should be removed
SafeMath.max64(uint64,uint64) (CV/2018-13722.sol#49-51) is never used and should be removed
SafeMath.min256(uint256,uint256) (CV/2018-13722.sol#61-63) is never used and should be removed
SafeMath.min64(uint64,uint64) (CV/2018-13722.sol#53-55) is never used and should be removed
SafeMath.safeDiv(uint256,uint256) (CV/2018-13722.sol#31-36) is never used and should be removed
SafeMath.safeMul(uint256,uint256) (CV/2018-13722.sol#25-29) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (CV/2018-13722.sol#67):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#134):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#99):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#279):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#283):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#303):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#306):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#308):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#310):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#315):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#317):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#338):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#339):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#390):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-13722.sol#397):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.21 (CV/2018-13722.sol#1) allows old versions
solc-0.4.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter StandardToken.transfer(address,uint256)._to (CV/2018-13722.sol#104) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._value (CV/2018-13722.sol#104) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (CV/2018-13722.sol#111) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (CV/2018-13722.sol#111) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (CV/2018-13722.sol#111) is not in mixedCase
Parameter StandardToken.balanceOf(address)._owner (CV/2018-13722.sol#124) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (CV/2018-13722.sol#128) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (CV/2018-13722.sol#128) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (CV/2018-13722.sol#141) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (CV/2018-13722.sol#141) is not in mixedCase
Parameter StandardToken.addApproval(address,uint256)._spender (CV/2018-13722.sol#151) is not in mixedCase
Parameter StandardToken.addApproval(address,uint256)._addedValue (CV/2018-13722.sol#151) is not in mixedCase
Parameter StandardToken.subApproval(address,uint256)._spender (CV/2018-13722.sol#165) is not in mixedCase
Parameter StandardToken.subApproval(address,uint256)._subtractedValue (CV/2018-13722.sol#165) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

UpgradeAgent (CV/2018-13722.sol#213-224) does not implement functions:
	- UpgradeAgent.upgradeFrom(address,uint256) (CV/2018-13722.sol#222)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unimplemented-functions

UpgradeAgent.originalSupply (CV/2018-13722.sol#215) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
CV/2018-13722.sol analyzed (7 contracts with 80 detectors), 44 result(s) found
