Compilation warnings/errors on CV/2018-19830.sol:
CV/2018-19830.sol:32:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
CV/2018-19830.sol:66:8: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
       throw;
       ^---^
CV/2018-19830.sol:81:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
CV/2018-19830.sol:90:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
CV/2018-19830.sol:162:5: Warning: Use of the "var" keyword is deprecated.
    var _allowance = allowed[_from][msg.sender];
    ^------------^
CV/2018-19830.sol:174:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
CV/2018-19830.sol:30:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:80:11: Warning: Invoking events without "emit" prefix is deprecated.
          InvalidCaller(msg.sender);
          ^-----------------------^
CV/2018-19830.sol:89:11: Warning: Invoking events without "emit" prefix is deprecated.
          LiquidityAlarm("The liquidity is switched off");
          ^---------------------------------------------^
CV/2018-19830.sol:114:9: Warning: Invoking events without "emit" prefix is deprecated.
        InvalidAccount(_to, "The receiver account is frozen");
        ^---------------------------------------------------^
CV/2018-19830.sol:118:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
CV/2018-19830.sol:131:7: Warning: Invoking events without "emit" prefix is deprecated.
      FrozenFunds(target, freeze);
      ^-------------------------^
CV/2018-19830.sol:142:11: Warning: Invoking events without "emit" prefix is deprecated.
          OwnershipTransferred(oldOwner, owner);
          ^-----------------------------------^
CV/2018-19830.sol:170:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
CV/2018-19830.sol:177:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
CV/2018-19830.sol:40:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
CV/2018-19830.sol:41:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value);
  ^----------------------------------------^
CV/2018-19830.sol:44:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
CV/2018-19830.sol:45:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value);
  ^----------------------------------------------------------^
CV/2018-19830.sol:46:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value);
  ^--------------------------------------------^
CV/2018-19830.sol:112:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) unFrozenAccount onlyTransferable {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:122:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) view returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:134:3: Warning: No visibility specified. Defaulting to "public". 
  function accountFrozenStatus(address target) view returns (bool frozen) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:146:3: Warning: No visibility specified. Defaulting to "public". 
  function switchLiquidity (bool _transferable) onlyOwner returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:151:3: Warning: No visibility specified. Defaulting to "public". 
  function liquidityStatus () view returns (bool _transferable) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:161:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) unFrozenAccount onlyTransferable{
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:173:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) unFrozenAccount {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:180:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) view returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:194:5: Warning: No visibility specified. Defaulting to "public". 
    function UBSexToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint a, uint b) internal returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-19830.sol:30:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).


BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:StandardToken.transferFrom(address,address,uint256) (CV/2018-19830.sol#161-171)
BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:StandardToken.approve(address,uint256) (CV/2018-19830.sol#173-178)
BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:BasicToken.transfer(address,uint256) (CV/2018-19830.sol#112-120)
BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:ERC20Basic.transfer(address,uint256) (CV/2018-19830.sol#41)
BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:ERC20Basic.transferFrom(address,address,uint256) (CV/2018-19830.sol#45)
BAFCToken (CV/2018-19830.sol#187-204) has incorrect ERC20 function interface:ERC20Basic.approve(address,uint256) (CV/2018-19830.sol#46)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

Contract locking ether found:
	Contract BAFCToken (CV/2018-19830.sol#187-204) has payable functions:
	 - BAFCToken.fallback() (CV/2018-19830.sol#200-202)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

SafeMath.assert(bool) (CV/2018-19830.sol#30-34) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing

SafeMath.div(uint256,uint256) (CV/2018-19830.sol#14-17) is never used and should be removed
SafeMath.mul(uint256,uint256) (CV/2018-19830.sol#8-12) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (CV/2018-19830.sol#32):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-19830.sol#66):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-19830.sol#81):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-19830.sol#90):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-19830.sol#174):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.24 (CV/2018-19830.sol#5) allows old versions
solc-0.4.24 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (CV/2018-19830.sol#112) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (CV/2018-19830.sol#112) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (CV/2018-19830.sol#122) is not in mixedCase
Parameter BasicToken.switchLiquidity(bool)._transferable (CV/2018-19830.sol#146) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (CV/2018-19830.sol#161) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (CV/2018-19830.sol#161) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (CV/2018-19830.sol#161) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (CV/2018-19830.sol#173) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (CV/2018-19830.sol#173) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (CV/2018-19830.sol#180) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (CV/2018-19830.sol#180) is not in mixedCase
Function BAFCToken.UBSexToken() (CV/2018-19830.sol#194-198) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

BAFCToken.decimals (CV/2018-19830.sol#190) should be constant
BAFCToken.name (CV/2018-19830.sol#188) should be constant
BAFCToken.symbol (CV/2018-19830.sol#189) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
CV/2018-19830.sol analyzed (5 contracts with 80 detectors), 32 result(s) found
