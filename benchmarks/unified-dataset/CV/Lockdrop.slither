
Lockdrop.lock(Lockdrop.Term,bytes,bool) (CV/Lockdrop.sol#58-72) uses a dangerous strict equality:
	- assert(bool)(address(lockAddr).balance == msg.value) (CV/Lockdrop.sol#70)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Contract locking ether found:
	Contract Lock (CV/Lockdrop.sol#8-31) has payable functions:
	 - Lock.constructor(address,uint256) (CV/Lockdrop.sol#11-16)
	 - Lock.fallback() (CV/Lockdrop.sol#21-30)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Lockdrop.lock(Lockdrop.Term,bytes,bool) (CV/Lockdrop.sol#58-72) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(address(lockAddr).balance == msg.value) (CV/Lockdrop.sol#70)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Lock.constructor(address,uint256) (CV/Lockdrop.sol#11-16) uses assembly
	- INLINE ASM (CV/Lockdrop.sol#12-16)
Lock.fallback() (CV/Lockdrop.sol#21-30) uses assembly
	- INLINE ASM (CV/Lockdrop.sol#22-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Pragma version^0.5.0 (CV/Lockdrop.sol#6) allows old versions
solc-0.5.0 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Lockdrop.addressFrom(address,uint32)._origin (CV/Lockdrop.sol#118) is not in mixedCase
Parameter Lockdrop.addressFrom(address,uint32)._nonce (CV/Lockdrop.sol#118) is not in mixedCase
Variable Lockdrop.LOCK_START_TIME (CV/Lockdrop.sol#41) is not in mixedCase
Variable Lockdrop.LOCK_END_TIME (CV/Lockdrop.sol#42) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
CV/Lockdrop.sol analyzed (2 contracts with 80 detectors), 11 result(s) found
