Compilation warnings/errors on CV/2018-14086.sol:
CV/2018-14086.sol:7:5: Warning: No visibility specified. Defaulting to "public".
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:12:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
CV/2018-14086.sol:16:5: Warning: No visibility specified. Defaulting to "public".
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:41:5: Warning: No visibility specified. Defaulting to "public".
    function MyToken(
    ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:57:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:58:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (frozenAccount[msg.sender]) throw;
                                           ^---^
CV/2018-14086.sol:59:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
CV/2018-14086.sol:60:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
CV/2018-14086.sol:69:9: Warning: No visibility specified. Defaulting to "public".
        function mintToken(address target, uint256 mintedAmount) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:76:9: Warning: No visibility specified. Defaulting to "public".
        function freezeAccount(address target, bool freeze) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:81:9: Warning: No visibility specified. Defaulting to "public".
        function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:86:9: Warning: No visibility specified. Defaulting to "public".
        function buy() returns (uint amount){
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:88:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                          ^---^
CV/2018-14086.sol:95:9: Warning: No visibility specified. Defaulting to "public".
        function sell(uint amount) returns (uint revenue){
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:96:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                                 ^---^
CV/2018-14086.sol:106:9: Warning: No visibility specified. Defaulting to "public".
        function setMinBalance(uint minimumBalanceInFinney) onlyOwner {
        ^ (Relevant source part starts here and spans across multiple lines).
CV/2018-14086.sol:62:52: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        if(_to.balance<minBalanceForAccounts)      _to.send(sell((minBalanceForAccounts-_to.balance)/sellPrice));
                                                   ^-----------------------------------------------------------^
CV/2018-14086.sol:65:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
CV/2018-14086.sol:72:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(0, owner, mintedAmount);
            ^------------------------------^
CV/2018-14086.sol:73:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(owner, target, mintedAmount);
            ^-----------------------------------^
CV/2018-14086.sol:78:13: Warning: Invoking events without "emit" prefix is deprecated.
            FrozenFunds(target, freeze);
            ^-------------------------^
CV/2018-14086.sol:91:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(this, msg.sender, amount);                // execute an event reflecting the change
            ^--------------------------------^
CV/2018-14086.sol:100:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            msg.sender.send(revenue);                          // sends ether to the seller
            ^----------------------^
CV/2018-14086.sol:101:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);                // executes an event reflecting on the change
            ^--------------------------------^
CV/2018-14086.sol:87:22: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
            amount = msg.value / buyPrice;                     // calculates the amount
                     ^-------^


MyToken (CV/2018-14086.sol#21-109) has incorrect ERC20 function interface:MyToken.transfer(address,uint256) (CV/2018-14086.sol#57-66)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

MyToken.transfer(address,uint256) (CV/2018-14086.sol#57-66) ignores return value by _to.send(sell((minBalanceForAccounts - _to.balance) / sellPrice)) (CV/2018-14086.sol#62)
MyToken.sell(uint256) (CV/2018-14086.sol#95-103) ignores return value by msg.sender.send(revenue) (CV/2018-14086.sol#100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (CV/2018-14086.sol#16-18) should emit an event for: 
	- owner = newOwner (CV/2018-14086.sol#17) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

MyToken.setPrices(uint256,uint256) (CV/2018-14086.sol#81-84) should emit an event for: 
	- sellPrice = newSellPrice (CV/2018-14086.sol#82) 
	- buyPrice = newBuyPrice (CV/2018-14086.sol#83) 
MyToken.setMinBalance(uint256) (CV/2018-14086.sol#106-108) should emit an event for: 
	- minBalanceForAccounts = minimumBalanceInFinney * 1000000000000000 (CV/2018-14086.sol#107) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

owned.transferOwnership(address).newOwner (CV/2018-14086.sol#16) lacks a zero-check on :
		- owner = newOwner (CV/2018-14086.sol#17)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Deprecated standard detected THROW (CV/2018-14086.sol#12):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14086.sol#58):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14086.sol#59):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14086.sol#60):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14086.sol#88):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14086.sol#96):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.21 (CV/2018-14086.sol#1) allows old versions
solc-0.4.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (CV/2018-14086.sol#4-19) is not in CapWords
Parameter MyToken.transfer(address,uint256)._to (CV/2018-14086.sol#57) is not in mixedCase
Parameter MyToken.transfer(address,uint256)._value (CV/2018-14086.sol#57) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in MyToken.sell(uint256) (CV/2018-14086.sol#95-103):
	External calls:
	- msg.sender.send(revenue) (CV/2018-14086.sol#100)
	Event emitted after the call(s):
	- Transfer(msg.sender,this,amount) (CV/2018-14086.sol#101)
Reentrancy in MyToken.transfer(address,uint256) (CV/2018-14086.sol#57-66):
	External calls:
	- sell((minBalanceForAccounts - msg.sender.balance) / sellPrice) (CV/2018-14086.sol#61)
		- msg.sender.send(revenue) (CV/2018-14086.sol#100)
	- _to.send(sell((minBalanceForAccounts - _to.balance) / sellPrice)) (CV/2018-14086.sol#62)
		- msg.sender.send(revenue) (CV/2018-14086.sol#100)
	State variables written after the call(s):
	- _to.send(sell((minBalanceForAccounts - _to.balance) / sellPrice)) (CV/2018-14086.sol#62)
		- balanceOf[this] += amount (CV/2018-14086.sol#97)
		- balanceOf[msg.sender] -= amount (CV/2018-14086.sol#98)
	- balanceOf[msg.sender] -= _value (CV/2018-14086.sol#63)
	- balanceOf[_to] += _value (CV/2018-14086.sol#64)
	Event emitted after the call(s):
	- Transfer(msg.sender,this,amount) (CV/2018-14086.sol#101)
		- _to.send(sell((minBalanceForAccounts - _to.balance) / sellPrice)) (CV/2018-14086.sol#62)
	- Transfer(msg.sender,_to,_value) (CV/2018-14086.sol#65)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

MyToken.standard (CV/2018-14086.sol#23) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
CV/2018-14086.sol analyzed (2 contracts with 80 detectors), 21 result(s) found
