Compilation warnings/errors on CV/2018-14087.sol:
CV/2018-14087.sol:159:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    		owner.send(msg.value);//
    		^-------------------^
CV/2018-14087.sol:167:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    		owner.send(num);
    		^-------------^


EncryptedToken (CV/2018-14087.sol#115-174) has incorrect ERC20 function interface:TokenERC20.transfer(address,uint256) (CV/2018-14087.sol#67-69)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

EncryptedToken.fallback() (CV/2018-14087.sol#156-160) ignores return value by owner.send(msg.value) (CV/2018-14087.sol#159)
EncryptedToken.getEth(uint256) (CV/2018-14087.sol#166-168) ignores return value by owner.send(num) (CV/2018-14087.sol#167)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (CV/2018-14087.sol#15-17) should emit an event for: 
	- owner = newOwner (CV/2018-14087.sol#16) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (CV/2018-14087.sol#15) lacks a zero-check on :
		- owner = newOwner (CV/2018-14087.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

TokenERC20._transfer(address,address,uint256) (CV/2018-14087.sol#48-65) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.16 (CV/2018-14087.sol#1) allows old versions
solc-0.4.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (CV/2018-14087.sol#3-18) is not in CapWords
Contract tokenRecipient (CV/2018-14087.sol#20) is not in CapWords
Parameter TokenERC20.transfer(address,uint256)._to (CV/2018-14087.sol#67) is not in mixedCase
Parameter TokenERC20.transfer(address,uint256)._value (CV/2018-14087.sol#67) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._from (CV/2018-14087.sol#71) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._to (CV/2018-14087.sol#71) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._value (CV/2018-14087.sol#71) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._spender (CV/2018-14087.sol#78) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._value (CV/2018-14087.sol#78) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._spender (CV/2018-14087.sol#85) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._value (CV/2018-14087.sol#85) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._extraData (CV/2018-14087.sol#85) is not in mixedCase
Parameter TokenERC20.burn(uint256)._value (CV/2018-14087.sol#95) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._from (CV/2018-14087.sol#104) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._value (CV/2018-14087.sol#104) is not in mixedCase
Parameter EncryptedToken.balanceOfa(address)._owner (CV/2018-14087.sol#170) is not in mixedCase
Variable EncryptedToken.INITIAL_SUPPLY (CV/2018-14087.sol#116) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

EncryptedToken.slitherConstructorVariables() (CV/2018-14087.sol#115-174) uses literals with too many digits:
	- INITIAL_SUPPLY = 2000000000 (CV/2018-14087.sol#116)
EncryptedToken.slitherConstructorVariables() (CV/2018-14087.sol#115-174) uses literals with too many digits:
	- buyPrice = 600000 (CV/2018-14087.sol#117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

EncryptedToken.INITIAL_SUPPLY (CV/2018-14087.sol#116) should be constant
TokenERC20.decimals (CV/2018-14087.sol#25) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (CV/2018-14087.sol#20)
approveAndCall(address,uint256,bytes) should be declared external:
	- TokenERC20.approveAndCall(address,uint256,bytes) (CV/2018-14087.sol#85-93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
CV/2018-14087.sol analyzed (4 contracts with 80 detectors), 31 result(s) found
