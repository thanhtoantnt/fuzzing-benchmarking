Compilation warnings/errors on CV/2018-13189.sol:
CV/2018-13189.sol:41:3: Warning: No visibility specified. Defaulting to "public".
  function balanceOf(address who) constant returns (uint256);
  ^---------------------------------------------------------^
CV/2018-13189.sol:42:3: Warning: No visibility specified. Defaulting to "public".
  function transfer(address to, uint256 value) returns (bool);
  ^----------------------------------------------------------^
CV/2018-13189.sol:52:3: Warning: No visibility specified. Defaulting to "public".
  function allowance(address owner, address spender) constant returns (uint256);
  ^----------------------------------------------------------------------------^
CV/2018-13189.sol:53:3: Warning: No visibility specified. Defaulting to "public".
  function transferFrom(address from, address to, uint256 value) returns (bool);
  ^----------------------------------------------------------------------------^
CV/2018-13189.sol:54:3: Warning: No visibility specified. Defaulting to "public".
  function approve(address spender, uint256 value) returns (bool);
  ^--------------------------------------------------------------^
CV/2018-13189.sol:73:3: Warning: No visibility specified. Defaulting to "public".
  function transfer(address _to, uint256 _value) returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:85:3: Warning: No visibility specified. Defaulting to "public".
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:109:3: Warning: No visibility specified. Defaulting to "public".
  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:127:3: Warning: No visibility specified. Defaulting to "public".
  function approve(address _spender, uint256 _value) returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:146:3: Warning: No visibility specified. Defaulting to "public".
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:165:3: Warning: No visibility specified. Defaulting to "public".
  function Ownable() {
  ^
Spanning multiple lines.
CV/2018-13189.sol:183:3: Warning: No visibility specified. Defaulting to "public".
  function transferOwnership(address newOwner) onlyOwner {
  ^
Spanning multiple lines.
CV/2018-13189.sol:222:3: Warning: No visibility specified. Defaulting to "public".
  function pause() onlyOwner whenNotPaused returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:231:3: Warning: No visibility specified. Defaulting to "public".
  function unpause() onlyOwner whenPaused returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:247:3: Warning: No visibility specified. Defaulting to "public".
  function transfer(address _to, uint _value) whenNotPaused returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:251:3: Warning: No visibility specified. Defaulting to "public".
  function transferFrom(address _from, address _to, uint _value) whenNotPaused returns (bool) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:264:3: Warning: No visibility specified. Defaulting to "public".
  function UNLB() {
  ^
Spanning multiple lines.
CV/2018-13189.sol:290:3: Warning: No visibility specified. Defaulting to "public".
  function ICO() {
  ^
Spanning multiple lines.
CV/2018-13189.sol:8:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:14:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:21:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^
Spanning multiple lines.
CV/2018-13189.sol:26:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^
Spanning multiple lines.


ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) performs a multiplication on the result of a division:
	-_total = unlb.totalSupply() * 100 / (100 - 12 - 15 - 5 - 3) (CV/2018-13189.sol#324)
	-unlb.mint(_team,(_total * 12) / 100) (CV/2018-13189.sol#325)
ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) performs a multiplication on the result of a division:
	-_total = unlb.totalSupply() * 100 / (100 - 12 - 15 - 5 - 3) (CV/2018-13189.sol#324)
	-unlb.mint(_fund,(_total * 15) / 100) (CV/2018-13189.sol#326)
ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) performs a multiplication on the result of a division:
	-_total = unlb.totalSupply() * 100 / (100 - 12 - 15 - 5 - 3) (CV/2018-13189.sol#324)
	-unlb.mint(_bounty,(_total * 5) / 100) (CV/2018-13189.sol#327)
ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) performs a multiplication on the result of a division:
	-_total = unlb.totalSupply() * 100 / (100 - 12 - 15 - 5 - 3) (CV/2018-13189.sol#324)
	-unlb.mint(_backers,(_total * 3) / 100) (CV/2018-13189.sol#328)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Reentrancy in ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329):
	External calls:
	- unlb.unpause() (CV/2018-13189.sol#321)
	State variables written after the call(s):
	- isFinished = true (CV/2018-13189.sol#322)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

ICO.ICO() (CV/2018-13189.sol#290-294) ignores return value by unlb.pause() (CV/2018-13189.sol#293)
ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) ignores return value by unlb.unpause() (CV/2018-13189.sol#321)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Ownable.transferOwnership(address) (CV/2018-13189.sol#183-187) should emit an event for: 
	- owner = newOwner (CV/2018-13189.sol#185) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Reentrancy in ICO.foreignBuy(address,uint256,string) (CV/2018-13189.sol#312-317):
	External calls:
	- unlb.mint(_investor,_unlbValue) (CV/2018-13189.sol#315)
	Event emitted after the call(s):
	- ForeignBuy(_investor,_unlbValue,_txHash) (CV/2018-13189.sol#316)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

ICO.pricePerWei() (CV/2018-13189.sol#296-303) uses timestamp for comparisons
	Dangerous comparisons:
	- now < 1511799420 (CV/2018-13189.sol#297)
	- now < 1511885820 (CV/2018-13189.sol#298)
	- now < 1513181820 (CV/2018-13189.sol#299)
	- now < 1515514620 (CV/2018-13189.sol#300)
	- now < 1516205820 (CV/2018-13189.sol#301)
ICO.fallback() (CV/2018-13189.sol#306-310) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! paused && now >= ICO_START_DATE && now < ICO_END_DATE) (CV/2018-13189.sol#307)
ICO.foreignBuy(address,uint256,string) (CV/2018-13189.sol#312-317) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! paused && now >= ICO_START_DATE && now < ICO_END_DATE) (CV/2018-13189.sol#313)
ICO.finish(address,address,address,address) (CV/2018-13189.sol#319-329) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now >= ICO_END_DATE && ! isFinished) (CV/2018-13189.sol#320)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

SafeMath.div(uint256,uint256) (CV/2018-13189.sol#14-19) is never used and should be removed
SafeMath.mul(uint256,uint256) (CV/2018-13189.sol#8-12) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version^0.4.18 (CV/2018-13189.sol#1) allows old versions
solc-0.4.18 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (CV/2018-13189.sol#73) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (CV/2018-13189.sol#73) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (CV/2018-13189.sol#85) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (CV/2018-13189.sol#109) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (CV/2018-13189.sol#109) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (CV/2018-13189.sol#109) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (CV/2018-13189.sol#127) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (CV/2018-13189.sol#127) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (CV/2018-13189.sol#146) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (CV/2018-13189.sol#146) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._to (CV/2018-13189.sol#247) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._value (CV/2018-13189.sol#247) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._from (CV/2018-13189.sol#251) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._to (CV/2018-13189.sol#251) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._value (CV/2018-13189.sol#251) is not in mixedCase
Parameter UNLB.mint(address,uint256)._x (CV/2018-13189.sol#268) is not in mixedCase
Parameter UNLB.mint(address,uint256)._v (CV/2018-13189.sol#268) is not in mixedCase
Parameter ICO.foreignBuy(address,uint256,string)._investor (CV/2018-13189.sol#312) is not in mixedCase
Parameter ICO.foreignBuy(address,uint256,string)._unlbValue (CV/2018-13189.sol#312) is not in mixedCase
Parameter ICO.foreignBuy(address,uint256,string)._txHash (CV/2018-13189.sol#312) is not in mixedCase
Parameter ICO.finish(address,address,address,address)._team (CV/2018-13189.sol#319) is not in mixedCase
Parameter ICO.finish(address,address,address,address)._fund (CV/2018-13189.sol#319) is not in mixedCase
Parameter ICO.finish(address,address,address,address)._bounty (CV/2018-13189.sol#319) is not in mixedCase
Parameter ICO.finish(address,address,address,address)._backers (CV/2018-13189.sol#319) is not in mixedCase
Constant ICO.admin (CV/2018-13189.sol#282) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ICO.teamWallet (CV/2018-13189.sol#283) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
CV/2018-13189.sol analyzed (10 contracts with 80 detectors), 43 result(s) found
