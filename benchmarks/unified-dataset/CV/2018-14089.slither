Compilation warnings/errors on CV/2018-14089.sol:
CV/2018-14089.sol:29:5: Warning: No visibility specified. Defaulting to "public".
    function balanceOf(address _owner) constant returns (uint256);
    ^------------------------------------------------------------^
CV/2018-14089.sol:30:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) returns (bool);
    ^------------------------------------------------------------^
CV/2018-14089.sol:48:5: Warning: No visibility specified. Defaulting to "public".
    function name() constant returns (string) { return "Virgo_ZodiacToken"; }
    ^-----------------------------------------------------------------------^
CV/2018-14089.sol:49:5: Warning: No visibility specified. Defaulting to "public".
    function symbol() constant returns (string) { return "VIR♍"; }
    ^--------------------------------------------------------------^
CV/2018-14089.sol:50:5: Warning: No visibility specified. Defaulting to "public".
    function decimals() constant returns (uint8) { return 8; }
    ^--------------------------------------------------------^
CV/2018-14089.sol:64:5: Warning: No visibility specified. Defaulting to "public".
    function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }
    ^----------------------------------------------------------------------------------------^
CV/2018-14089.sol:66:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:68:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.data.length < (2 * 32) + 4) { throw; }
                                             ^---^
CV/2018-14089.sol:86:5: Warning: No visibility specified. Defaulting to "public".
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:88:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(msg.data.length < (3 * 32) + 4) { throw; }
                                             ^---^
CV/2018-14089.sol:110:5: Warning: No visibility specified. Defaulting to "public".
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:120:5: Warning: No visibility specified. Defaulting to "public".
    function allowance(address _owner, address _spender) constant returns (uint256) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:129:5: Warning: No visibility specified. Defaulting to "public".
    function enablePurchasing() {
    ^
Spanning multiple lines.
CV/2018-14089.sol:130:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:135:5: Warning: No visibility specified. Defaulting to "public".
    function disablePurchasing() {
    ^
Spanning multiple lines.
CV/2018-14089.sol:136:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:141:5: Warning: No visibility specified. Defaulting to "public".
    function withdrawForeignTokens(address _tokenContract) returns (bool) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:142:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:150:5: Warning: No visibility specified. Defaulting to "public".
    function getStats() constant returns (uint256, uint256, uint256, bool) {
    ^
Spanning multiple lines.
CV/2018-14089.sol:154:5: Warning: No visibility specified. Defaulting to "public".
    function setAIRDROPBounce(uint _newPrice)  {
    ^
Spanning multiple lines.
CV/2018-14089.sol:155:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:159:5: Warning: No visibility specified. Defaulting to "public".
    function setICORatio(uint _newPrice)  {
    ^
Spanning multiple lines.
CV/2018-14089.sol:160:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:164:5: Warning: No visibility specified. Defaulting to "public".
    function setMINfinney(uint _newPrice)  {
    ^
Spanning multiple lines.
CV/2018-14089.sol:165:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) { throw; }
                                   ^---^
CV/2018-14089.sol:170:5: Warning: No visibility specified. Defaulting to "public".
    function() payable {
    ^
Spanning multiple lines.
CV/2018-14089.sol:171:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!purchasingAllowed) { throw; }
                                  ^---^
CV/2018-14089.sol:48:5: Warning: Function state mutability can be restricted to pure
    function name() constant returns (string) { return "Virgo_ZodiacToken"; }
    ^-----------------------------------------------------------------------^
CV/2018-14089.sol:49:5: Warning: Function state mutability can be restricted to pure
    function symbol() constant returns (string) { return "VIR♍"; }
    ^--------------------------------------------------------------^
CV/2018-14089.sol:50:5: Warning: Function state mutability can be restricted to pure
    function decimals() constant returns (uint8) { return 8; }
    ^--------------------------------------------------------^


Virgo_ZodiacToken.fallback() (CV/2018-14089.sol#170-185) performs a multiplication on the result of a division:
	-tokensIssued = (msg.value / 1e10) * ICORatio + AIRDROPBounce * 1e8 (CV/2018-14089.sol#178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Virgo_ZodiacToken.transferFrom(address,address,uint256).allowance (CV/2018-14089.sol#93) shadows:
	- Virgo_ZodiacToken.allowance(address,address) (CV/2018-14089.sol#120-122) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Virgo_ZodiacToken.setAIRDROPBounce(uint256) (CV/2018-14089.sol#154-157) should emit an event for: 
	- AIRDROPBounce = _newPrice (CV/2018-14089.sol#156) 
Virgo_ZodiacToken.setICORatio(uint256) (CV/2018-14089.sol#159-162) should emit an event for: 
	- ICORatio = _newPrice (CV/2018-14089.sol#161) 
Virgo_ZodiacToken.setMINfinney(uint256) (CV/2018-14089.sol#164-167) should emit an event for: 
	- MINfinney = _newPrice (CV/2018-14089.sol#166) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

SafeMath.add(uint256,uint256) (CV/2018-14089.sol#21-25) is never used and should be removed
SafeMath.div(uint256,uint256) (CV/2018-14089.sol#11-14) is never used and should be removed
SafeMath.mul(uint256,uint256) (CV/2018-14089.sol#5-9) is never used and should be removed
SafeMath.sub(uint256,uint256) (CV/2018-14089.sol#16-19) is never used and should be removed
Virgo_ZodiacToken.sub(uint256,uint256) (CV/2018-14089.sol#59-62) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (CV/2018-14089.sol#68):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#88):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#130):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#136):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#142):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#155):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#160):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#165):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (CV/2018-14089.sol#171):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Pragma version^0.4.19 (CV/2018-14089.sol#1) allows old versions
solc-0.4.19 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Virgo_ZodiacToken (CV/2018-14089.sol#33-208) should inherit from ForeignToken (CV/2018-14089.sol#28-31)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Contract Virgo_ZodiacToken (CV/2018-14089.sol#33-208) is not in CapWords
Parameter Virgo_ZodiacToken.balanceOf(address)._owner (CV/2018-14089.sol#64) is not in mixedCase
Parameter Virgo_ZodiacToken.transfer(address,uint256)._to (CV/2018-14089.sol#66) is not in mixedCase
Parameter Virgo_ZodiacToken.transfer(address,uint256)._value (CV/2018-14089.sol#66) is not in mixedCase
Parameter Virgo_ZodiacToken.transferFrom(address,address,uint256)._from (CV/2018-14089.sol#86) is not in mixedCase
Parameter Virgo_ZodiacToken.transferFrom(address,address,uint256)._to (CV/2018-14089.sol#86) is not in mixedCase
Parameter Virgo_ZodiacToken.transferFrom(address,address,uint256)._value (CV/2018-14089.sol#86) is not in mixedCase
Parameter Virgo_ZodiacToken.approve(address,uint256)._spender (CV/2018-14089.sol#110) is not in mixedCase
Parameter Virgo_ZodiacToken.approve(address,uint256)._value (CV/2018-14089.sol#110) is not in mixedCase
Parameter Virgo_ZodiacToken.allowance(address,address)._owner (CV/2018-14089.sol#120) is not in mixedCase
Parameter Virgo_ZodiacToken.allowance(address,address)._spender (CV/2018-14089.sol#120) is not in mixedCase
Parameter Virgo_ZodiacToken.withdrawForeignTokens(address)._tokenContract (CV/2018-14089.sol#141) is not in mixedCase
Parameter Virgo_ZodiacToken.setAIRDROPBounce(uint256)._newPrice (CV/2018-14089.sol#154) is not in mixedCase
Parameter Virgo_ZodiacToken.setICORatio(uint256)._newPrice (CV/2018-14089.sol#159) is not in mixedCase
Parameter Virgo_ZodiacToken.setMINfinney(uint256)._newPrice (CV/2018-14089.sol#164) is not in mixedCase
Variable Virgo_ZodiacToken.MINfinney (CV/2018-14089.sol#43) is not in mixedCase
Variable Virgo_ZodiacToken.AIRDROPBounce (CV/2018-14089.sol#44) is not in mixedCase
Variable Virgo_ZodiacToken.ICORatio (CV/2018-14089.sol#45) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Virgo_ZodiacToken.fallback() (CV/2018-14089.sol#170-185):
	External calls:
	- owner.transfer(msg.value) (CV/2018-14089.sol#175)
	State variables written after the call(s):
	- balances[msg.sender] += tokensIssued (CV/2018-14089.sol#182)
	- totalContribution += msg.value (CV/2018-14089.sol#176)
	- totalSupply += tokensIssued (CV/2018-14089.sol#181)
	Event emitted after the call(s):
	- Transfer(address(this),msg.sender,tokensIssued) (CV/2018-14089.sol#184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Virgo_ZodiacToken.slitherConstructorVariables() (CV/2018-14089.sol#33-208) uses literals with too many digits:
	- AIRDROPBounce = 50000000 (CV/2018-14089.sol#44)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Virgo_ZodiacToken.totalBonusTokensIssued (CV/2018-14089.sol#42) should be constant
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
CV/2018-14089.sol analyzed (3 contracts with 80 detectors), 43 result(s) found
