Compilation warnings/errors on benchmarks/unified-dataset/CV/2018-13073.sol:
benchmarks/unified-dataset/CV/2018-13073.sol:10:5: Warning: No visibility specified. Defaulting to "public".
    function owned() {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:15:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:19:5: Warning: No visibility specified. Defaulting to "public".
    function transferOwnership(address newOwner) onlyOwner {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:24:27: Warning: No visibility specified. Defaulting to "public".
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
benchmarks/unified-dataset/CV/2018-13073.sol:42:5: Warning: No visibility specified. Defaulting to "public".
    function token(
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:56:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:57:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:58:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:65:5: Warning: No visibility specified. Defaulting to "public".
    function approve(address _spender, uint256 _value)
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:72:5: Warning: No visibility specified. Defaulting to "public".
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:82:5: Warning: No visibility specified. Defaulting to "public".
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:83:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:84:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:85:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:94:5: Warning: No visibility specified. Defaulting to "public".
    function () {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:95:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:115:5: Warning: No visibility specified. Defaulting to "public".
    function ETHEREUMBLACK() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^-------------------------------------------------------------------------------------^
benchmarks/unified-dataset/CV/2018-13073.sol:117:5: Warning: No visibility specified. Defaulting to "public".
    function transfer(address _to, uint256 _value) {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:118:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:119:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:120:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:128:5: Warning: No visibility specified. Defaulting to "public".
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:129:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:130:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:131:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:132:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:140:5: Warning: No visibility specified. Defaulting to "public".
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:147:5: Warning: No visibility specified. Defaulting to "public".
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:152:5: Warning: No visibility specified. Defaulting to "public".
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:157:5: Warning: No visibility specified. Defaulting to "public".
    function buy() payable {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:159:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:165:5: Warning: No visibility specified. Defaulting to "public".
    function sell(uint256 amount) {
    ^
Spanning multiple lines.
benchmarks/unified-dataset/CV/2018-13073.sol:166:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
benchmarks/unified-dataset/CV/2018-13073.sol:170:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^


Reentrancy in ETHEREUMBLACK.sell(uint256) (benchmarks/unified-dataset/CV/2018-13073.sol#165-174):
	External calls:
	- ! msg.sender.send(amount * sellPrice) (benchmarks/unified-dataset/CV/2018-13073.sol#169)
	Event emitted after the call(s):
	- Transfer(msg.sender,this,amount) (benchmarks/unified-dataset/CV/2018-13073.sol#172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/unified-dataset/CV/2018-13073.sol analyzed (4 contracts with 7 detectors), 1 result(s) found
