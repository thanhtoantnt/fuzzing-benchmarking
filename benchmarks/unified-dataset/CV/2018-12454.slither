
simplelottery._finish() (CV/2018-12454.sol#102-122) sends eth to arbitrary user
	Dangerous calls:
	- developer.transfer(remain) (CV/2018-12454.sol#116)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

simplelottery.findWinner(uint256) (CV/2018-12454.sol#49-53) uses a weak PRNG: "i = value % numguesses (CV/2018-12454.sol#51)" 
simplelottery._finish() (CV/2018-12454.sol#102-122) uses a weak PRNG: "lotterynumber = (uint256(curhash) + block_timestamp) % (maxguess + 1) (CV/2018-12454.sol#106)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

simplelottery.setBettingCondition(uint256,uint256) (CV/2018-12454.sol#39-47) should emit an event for: 
	- arraysize = _contenders (CV/2018-12454.sol#43) 
	- arraysize = 1000 (CV/2018-12454.sol#45) 
	- bettingprice = _bettingprice (CV/2018-12454.sol#46) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Pragma version^0.4.11 (CV/2018-12454.sol#5) allows old versions
solc-0.4.11 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract simplelottery (CV/2018-12454.sol#6-149) is not in CapWords
Parameter simplelottery.setBettingCondition(uint256,uint256)._contenders (CV/2018-12454.sol#39) is not in mixedCase
Parameter simplelottery.setBettingCondition(uint256,uint256)._bettingprice (CV/2018-12454.sol#39) is not in mixedCase
Constant simplelottery.maxguess (CV/2018-12454.sol#14) is not in UPPER_CASE_WITH_UNDERSCORES
Variable simplelottery._gameindex (CV/2018-12454.sol#19) is not in mixedCase
Variable simplelottery._starttime (CV/2018-12454.sol#20) is not in mixedCase
Variable simplelottery._winner (CV/2018-12454.sol#26) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in simplelottery._finish() (CV/2018-12454.sol#102-122):
	External calls:
	- _winner.transfer(prize) (CV/2018-12454.sol#112)
	Event emitted after the call(s):
	- SentPrizeToWinner(_winner,prize,_gameindex,lotterynumber,_starttime,block_timestamp) (CV/2018-12454.sol#113)
Reentrancy in simplelottery._finish() (CV/2018-12454.sol#102-122):
	External calls:
	- _winner.transfer(prize) (CV/2018-12454.sol#112)
	- developer.transfer(remain) (CV/2018-12454.sol#116)
	State variables written after the call(s):
	- _gameindex ++ (CV/2018-12454.sol#119)
	- _starttime = block.timestamp (CV/2018-12454.sol#121)
	- numguesses = 0 (CV/2018-12454.sol#118)
	- state = State.Started (CV/2018-12454.sol#120)
	Event emitted after the call(s):
	- SentDeveloperFee(remain,this.balance) (CV/2018-12454.sol#117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

simplelottery.slitherConstructorConstantVariables() (CV/2018-12454.sol#6-149) uses literals with too many digits:
	- maxguess = 1000000 (CV/2018-12454.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
CV/2018-12454.sol analyzed (1 contracts with 80 detectors), 16 result(s) found
