
digitalNotary.bug_unchk_send28() (Unchecked-Send/unchecked_buggy_50.sol#10-11) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#11)
digitalNotary.bug_unchk_send21() (Unchecked-Send/unchecked_buggy_50.sol#14-15) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#15)
digitalNotary.bug_unchk_send10() (Unchecked-Send/unchecked_buggy_50.sol#18-19) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#19)
digitalNotary.bug_unchk_send22() (Unchecked-Send/unchecked_buggy_50.sol#22-23) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#23)
digitalNotary.bug_unchk_send12() (Unchecked-Send/unchecked_buggy_50.sol#32-33) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#33)
digitalNotary.bug_unchk_send11() (Unchecked-Send/unchecked_buggy_50.sol#36-37) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#37)
digitalNotary.bug_unchk_send31() (Unchecked-Send/unchecked_buggy_50.sol#40-41) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#41)
digitalNotary.bug_unchk_send13() (Unchecked-Send/unchecked_buggy_50.sol#44-45) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#45)
digitalNotary.bug_unchk_send1() (Unchecked-Send/unchecked_buggy_50.sol#62-63) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#63)
digitalNotary.bug_unchk_send2() (Unchecked-Send/unchecked_buggy_50.sol#76-77) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#77)
digitalNotary.bug_unchk_send17() (Unchecked-Send/unchecked_buggy_50.sol#85-86) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#86)
digitalNotary.bug_unchk_send3() (Unchecked-Send/unchecked_buggy_50.sol#92-93) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#93)
digitalNotary.bug_unchk_send9() (Unchecked-Send/unchecked_buggy_50.sol#101-102) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#102)
digitalNotary.bug_unchk_send25() (Unchecked-Send/unchecked_buggy_50.sol#108-109) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#109)
digitalNotary.bug_unchk_send19() (Unchecked-Send/unchecked_buggy_50.sol#115-116) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#116)
digitalNotary.bug_unchk_send26() (Unchecked-Send/unchecked_buggy_50.sol#122-123) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#123)
digitalNotary.bug_unchk_send20() (Unchecked-Send/unchecked_buggy_50.sol#130-131) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#131)
digitalNotary.bug_unchk_send32() (Unchecked-Send/unchecked_buggy_50.sol#138-139) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#139)
digitalNotary.bug_unchk_send4() (Unchecked-Send/unchecked_buggy_50.sol#149-150) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#150)
digitalNotary.bug_unchk_send7() (Unchecked-Send/unchecked_buggy_50.sol#156-157) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#157)
digitalNotary.bug_unchk_send23() (Unchecked-Send/unchecked_buggy_50.sol#163-164) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#164)
digitalNotary.bug_unchk_send14() (Unchecked-Send/unchecked_buggy_50.sol#175-176) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#176)
digitalNotary.bug_unchk_send30() (Unchecked-Send/unchecked_buggy_50.sol#196-197) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#197)
digitalNotary.bug_unchk_send8() (Unchecked-Send/unchecked_buggy_50.sol#216-217) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#217)
digitalNotary.bug_unchk_send27() (Unchecked-Send/unchecked_buggy_50.sol#223-224) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(1000000000000000000) (Unchecked-Send/unchecked_buggy_50.sol#224)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

digitalNotary (Unchecked-Send/unchecked_buggy_50.sol#7-225) contract sets array length with a user-controlled value:
	- HashList[hash].push(thisregistration) (Unchecked-Send/unchecked_buggy_50.sol#212)
digitalNotary (Unchecked-Send/unchecked_buggy_50.sol#7-225) contract sets array length with a user-controlled value:
	- HashList[hash].push(thisregistration) (Unchecked-Send/unchecked_buggy_50.sol#189)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

digitalNotary.sethashfee(uint256) (Unchecked-Send/unchecked_buggy_50.sol#79-84) contains a tautology or contradiction:
	- require(bool)(newfee >= 0) (Unchecked-Send/unchecked_buggy_50.sol#81)
digitalNotary.setchangehashownerfee(uint256) (Unchecked-Send/unchecked_buggy_50.sol#95-100) contains a tautology or contradiction:
	- require(bool)(newfee >= 0) (Unchecked-Send/unchecked_buggy_50.sol#97)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

digitalNotary.registerHash(bytes32).thisregistration (Unchecked-Send/unchecked_buggy_50.sol#185) is a local variable never initialized
digitalNotary.changeHashOwnership(bytes32,address).thisregistration (Unchecked-Send/unchecked_buggy_50.sol#208) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

digitalNotary.setmanager(address) (Unchecked-Send/unchecked_buggy_50.sol#125-129) should emit an event for: 
	- manager = newmngr (Unchecked-Send/unchecked_buggy_50.sol#128) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

digitalNotary.sethashfee(uint256) (Unchecked-Send/unchecked_buggy_50.sol#79-84) should emit an event for: 
	- hashfee = newfee (Unchecked-Send/unchecked_buggy_50.sol#83) 
digitalNotary.setchangehashownerfee(uint256) (Unchecked-Send/unchecked_buggy_50.sol#95-100) should emit an event for: 
	- changehashownerfee = newfee (Unchecked-Send/unchecked_buggy_50.sol#99) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

digitalNotary.registerHash(bytes32) (Unchecked-Send/unchecked_buggy_50.sol#178-195) compares to a boolean constant:
	-require(bool)(contractactive == true) (Unchecked-Send/unchecked_buggy_50.sol#181)
digitalNotary.changeHashOwnership(bytes32,address) (Unchecked-Send/unchecked_buggy_50.sol#199-215) compares to a boolean constant:
	-require(bool)(contractactive == true) (Unchecked-Send/unchecked_buggy_50.sol#202)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Pragma version^0.5.12 (Unchecked-Send/unchecked_buggy_50.sol#5) allows old versions
solc-0.5.12 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract digitalNotary (Unchecked-Send/unchecked_buggy_50.sol#7-225) is not in CapWords
Function digitalNotary.bug_unchk_send28() (Unchecked-Send/unchecked_buggy_50.sol#10-11) is not in mixedCase
Function digitalNotary.bug_unchk_send21() (Unchecked-Send/unchecked_buggy_50.sol#14-15) is not in mixedCase
Function digitalNotary.bug_unchk_send10() (Unchecked-Send/unchecked_buggy_50.sol#18-19) is not in mixedCase
Function digitalNotary.bug_unchk_send22() (Unchecked-Send/unchecked_buggy_50.sol#22-23) is not in mixedCase
Function digitalNotary.bug_unchk_send12() (Unchecked-Send/unchecked_buggy_50.sol#32-33) is not in mixedCase
Function digitalNotary.bug_unchk_send11() (Unchecked-Send/unchecked_buggy_50.sol#36-37) is not in mixedCase
Function digitalNotary.bug_unchk_send31() (Unchecked-Send/unchecked_buggy_50.sol#40-41) is not in mixedCase
Function digitalNotary.bug_unchk_send13() (Unchecked-Send/unchecked_buggy_50.sol#44-45) is not in mixedCase
Function digitalNotary.bug_unchk_send1() (Unchecked-Send/unchecked_buggy_50.sol#62-63) is not in mixedCase
Function digitalNotary.bug_unchk_send2() (Unchecked-Send/unchecked_buggy_50.sol#76-77) is not in mixedCase
Function digitalNotary.bug_unchk_send17() (Unchecked-Send/unchecked_buggy_50.sol#85-86) is not in mixedCase
Function digitalNotary.bug_unchk_send3() (Unchecked-Send/unchecked_buggy_50.sol#92-93) is not in mixedCase
Function digitalNotary.bug_unchk_send9() (Unchecked-Send/unchecked_buggy_50.sol#101-102) is not in mixedCase
Function digitalNotary.bug_unchk_send25() (Unchecked-Send/unchecked_buggy_50.sol#108-109) is not in mixedCase
Function digitalNotary.bug_unchk_send19() (Unchecked-Send/unchecked_buggy_50.sol#115-116) is not in mixedCase
Function digitalNotary.bug_unchk_send26() (Unchecked-Send/unchecked_buggy_50.sol#122-123) is not in mixedCase
Function digitalNotary.bug_unchk_send20() (Unchecked-Send/unchecked_buggy_50.sol#130-131) is not in mixedCase
Function digitalNotary.bug_unchk_send32() (Unchecked-Send/unchecked_buggy_50.sol#138-139) is not in mixedCase
Function digitalNotary.bug_unchk_send4() (Unchecked-Send/unchecked_buggy_50.sol#149-150) is not in mixedCase
Function digitalNotary.bug_unchk_send7() (Unchecked-Send/unchecked_buggy_50.sol#156-157) is not in mixedCase
Function digitalNotary.bug_unchk_send23() (Unchecked-Send/unchecked_buggy_50.sol#163-164) is not in mixedCase
Function digitalNotary.bug_unchk_send14() (Unchecked-Send/unchecked_buggy_50.sol#175-176) is not in mixedCase
Function digitalNotary.bug_unchk_send30() (Unchecked-Send/unchecked_buggy_50.sol#196-197) is not in mixedCase
Function digitalNotary.bug_unchk_send8() (Unchecked-Send/unchecked_buggy_50.sol#216-217) is not in mixedCase
Function digitalNotary.bug_unchk_send27() (Unchecked-Send/unchecked_buggy_50.sol#223-224) is not in mixedCase
Variable digitalNotary.HashList (Unchecked-Send/unchecked_buggy_50.sol#34) is not in mixedCase
Variable digitalNotary.HashListLength (Unchecked-Send/unchecked_buggy_50.sol#38) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

digitalNotary.constructor() (Unchecked-Send/unchecked_buggy_50.sol#48-61) uses literals with too many digits:
	- hashfee = 5000000000000000 (Unchecked-Send/unchecked_buggy_50.sol#55)
digitalNotary.constructor() (Unchecked-Send/unchecked_buggy_50.sol#48-61) uses literals with too many digits:
	- changehashownerfee = 25000000000000000 (Unchecked-Send/unchecked_buggy_50.sol#57)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
Unchecked-Send/unchecked_buggy_50.sol analyzed (1 contracts with 80 detectors), 68 result(s) found
