Compilation warnings/errors on benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:50:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:59:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk46.send(subpot_unchk46);  //bug
        ^---------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:96:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:101:2: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
	msg.sender.send(Balances_unchk17);}
	^-------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:109:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:115:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:130:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:158:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:166:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:196:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk8.send(winAmount_unchk8);
        ^----------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:209:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (4 ether); }
       ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:231:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:241:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk20.send(winAmount_unchk20);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:251:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk32.send(winAmount_unchk32);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:264:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:287:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:298:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:316:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk44.send(winAmount_unchk44);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:348:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:355:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:57:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                      ^-------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol:57:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                                       ^--------------^


AZT.checkFrozenWallet(address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#301-309) uses timestamp for comparisons
	Dangerous comparisons:
	- (_from == owner || (! tokenFrozen && (! frozenWallets[_from].isFrozen || now >= frozenWallets[_from].frozenTime || balanceOf[_from].sub(_value) >= frozenWallets[_from].frozenAmount))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#302-308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Reentrancy in AZT.sendToWinner_unchk20() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#239-243):
	External calls:
	- winner_unchk20.send(winAmount_unchk20) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#241)
	State variables written after the call(s):
	- payedOut_unchk20 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#242)
Reentrancy in AZT.sendToWinner_unchk32() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#249-253):
	External calls:
	- winner_unchk32.send(winAmount_unchk32) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#251)
	State variables written after the call(s):
	- payedOut_unchk32 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#252)
Reentrancy in AZT.sendToWinner_unchk44() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#314-318):
	External calls:
	- winner_unchk44.send(winAmount_unchk44) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#316)
	State variables written after the call(s):
	- payedOut_unchk44 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#317)
Reentrancy in TokenERC20.sendToWinner_unchk8() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#194-198):
	External calls:
	- winner_unchk8.send(winAmount_unchk8) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#196)
	State variables written after the call(s):
	- payedOut_unchk8 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol#197)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_17.sol analyzed (5 contracts with 7 detectors), 5 result(s) found
