Compilation warnings/errors on benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:30:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:35:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk46.send(subpot_unchk46);  //bug
        ^---------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:57:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:61:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:80:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk8.send(winAmount_unchk8);
        ^----------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:86:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (4 ether); }
       ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:89:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:93:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:102:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk44.send(winAmount_unchk44);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:150:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:157:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:201:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:33:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                        ^-------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:33:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                                         ^--------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol:211:1: Warning: Function state mutability can be restricted to pure
function callnotchecked_unchk13(address callee) public {
^ (Relevant source part starts here and spans across multiple lines).


PHO.transfer(address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#159-181) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now >= 1589036400) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#167)
	- require(bool)(now >= 1620572400) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#169)
	- require(bool)(now >= 1652108400) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#171)
	- require(bool)(now >= 1683644400) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#173)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Reentrancy in PHO.sendToWinner_unchk44() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#100-104):
	External calls:
	- winner_unchk44.send(winAmount_unchk44) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#102)
	State variables written after the call(s):
	- payedOut_unchk44 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#103)
Reentrancy in PHO.sendToWinner_unchk8() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#78-82):
	External calls:
	- winner_unchk8.send(winAmount_unchk8) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#80)
	State variables written after the call(s):
	- payedOut_unchk8 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol#81)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_4.sol analyzed (2 contracts with 7 detectors), 3 result(s) found
