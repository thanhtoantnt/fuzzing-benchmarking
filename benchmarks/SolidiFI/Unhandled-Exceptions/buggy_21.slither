Compilation warnings/errors on benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:7:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk46.send(subpot_unchk46);  //bug
        ^---------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:28:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:73:2: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
	msg.sender.send(Balances_unchk17);}
	^-------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:82:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:89:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:121:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:138:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:148:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk20.send(winAmount_unchk20);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:159:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk32.send(winAmount_unchk32);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:165:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:201:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk8.send(winAmount_unchk8);
        ^----------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:212:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (4 ether); }
       ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:225:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:250:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:276:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk44.send(winAmount_unchk44);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:451:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:467:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:486:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:5:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                      ^-------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:5:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                                       ^--------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:66:3: Warning: Function state mutability can be restricted to pure
  function callnotchecked_unchk13(address callee) public {
  ^ (Relevant source part starts here and spans across multiple lines).
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:76:3: Warning: Function state mutability can be restricted to pure
  function callnotchecked_unchk37(address payable callee) public {
  ^ (Relevant source part starts here and spans across multiple lines).
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol:125:3: Warning: Function state mutability can be restricted to pure
  function callnotchecked_unchk25(address payable callee) public {
  ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in StableDEX.adminProfitWithdraw(uint8,address) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#253-269):
	External calls:
	- Token(tokenAddr).transfer(admin,feeAmount[admin][tokenAddr]) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#263)
	State variables written after the call(s):
	- feeAmount[admin][tokenAddr] = 0 (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#264)
Reentrancy in StableDEX.withdraw(uint8,address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#228-248):
	External calls:
	- Token(tokenaddr).transfer(msg.sender,(amount.sub(withdrawfee[tokenaddr]))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#242)
	State variables written after the call(s):
	- userDetails[msg.sender][tokenaddr] = userDetails[msg.sender][tokenaddr].sub(amount) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#243)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in StableDEX.withdraw(uint8,address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#228-248):
	External calls:
	- Token(tokenaddr).transfer(msg.sender,(amount.sub(withdrawfee[tokenaddr]))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#242)
	State variables written after the call(s):
	- feeAmount[admin][tokenaddr] = feeAmount[admin][tokenaddr].add(withdrawfee[tokenaddr]) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#244)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in StableDEX.tokenDeposit(address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#214-223):
	External calls:
	- Token(tokenaddr).transferFrom(msg.sender,address(this),tokenAmount) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#219)
	Event emitted after the call(s):
	- DepositandWithdraw(msg.sender,tokenaddr,tokenAmount,0) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#220)
Reentrancy in StableDEX.withdraw(uint8,address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#228-248):
	External calls:
	- Token(tokenaddr).transfer(msg.sender,(amount.sub(withdrawfee[tokenaddr]))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#242)
	External calls sending eth:
	- msg.sender.transfer(amount.sub(withdrawfee[address(0)])) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#234)
	Event emitted after the call(s):
	- DepositandWithdraw(msg.sender,tokenaddr,amount,1) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#246)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Reentrancy in StableDEX.adminProfitWithdraw(uint8,address) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#253-269):
	External calls:
	- admin.transfer(feeAmount[admin][address(0)]) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#257)
	State variables written after the call(s):
	- feeAmount[admin][address(0)] = 0 (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#258)
Reentrancy in StableDEX.sendToWinner_unchk20() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#146-150):
	External calls:
	- winner_unchk20.send(winAmount_unchk20) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#148)
	State variables written after the call(s):
	- payedOut_unchk20 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#149)
Reentrancy in StableDEX.sendToWinner_unchk32() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#157-161):
	External calls:
	- winner_unchk32.send(winAmount_unchk32) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#159)
	State variables written after the call(s):
	- payedOut_unchk32 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#160)
Reentrancy in StableDEX.sendToWinner_unchk44() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#274-278):
	External calls:
	- winner_unchk44.send(winAmount_unchk44) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#276)
	State variables written after the call(s):
	- payedOut_unchk44 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#277)
Reentrancy in StableDEX.sendToWinner_unchk8() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#199-203):
	External calls:
	- winner_unchk8.send(winAmount_unchk8) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#201)
	State variables written after the call(s):
	- payedOut_unchk8 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#202)
Reentrancy in StableDEX.withdraw(uint8,address,uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#228-248):
	External calls:
	- msg.sender.transfer(amount.sub(withdrawfee[address(0)])) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#234)
	State variables written after the call(s):
	- feeAmount[admin][address(0)] = feeAmount[admin][address(0)].add(withdrawfee[address(0)]) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#236)
	- userDetails[msg.sender][address(0)] = userDetails[msg.sender][address(0)].sub(amount) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#235)
	Event emitted after the call(s):
	- DepositandWithdraw(msg.sender,tokenaddr,amount,1) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol#246)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_21.sol analyzed (3 contracts with 7 detectors), 11 result(s) found
