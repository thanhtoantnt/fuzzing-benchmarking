Compilation warnings/errors on benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:9:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:15:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:90:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:94:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:119:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:128:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk20.send(winAmount_unchk20);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:139:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk32.send(winAmount_unchk32);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:144:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:151:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:166:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk46.send(subpot_unchk46);  //bug
        ^---------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:183:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk8.send(winAmount_unchk8);
        ^----------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:195:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (4 ether); }
       ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:208:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:215:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:227:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk44.send(winAmount_unchk44);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:252:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:261:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:164:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                        ^-------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:164:42: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                                         ^--------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:108:3: Warning: Function state mutability can be restricted to pure
  function callnotchecked_unchk25(address payable callee) public {
  ^ (Relevant source part starts here and spans across multiple lines).
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol:154:3: Warning: Function state mutability can be restricted to pure
  function callnotchecked_unchk13(address callee) public {
  ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in Staking.redeem() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#197-206):
	External calls:
	- require(bool)(token.transfer(msg.sender,staker[msg.sender].tokens)) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#201)
	- require(bool)(token.transferFrom(owner,msg.sender,staker[msg.sender].tokens * stakePercentage * 100 / 10000)) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#202)
	State variables written after the call(s):
	- staker[msg.sender].redeem = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#204)
	- staker[msg.sender].tokens = 0 (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in Staking.startStaking() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#187-193):
	External calls:
	- require(bool)(token.transferFrom(msg.sender,address(this),stakeTokens + findOnePercent(stakeTokens))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#189)
	State variables written after the call(s):
	- staker[msg.sender].time = now (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#190)
	- staker[msg.sender].tokens = staker[msg.sender].tokens + stakeTokens (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#191)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Staking.redeem() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#197-206):
	External calls:
	- require(bool)(token.transfer(msg.sender,staker[msg.sender].tokens)) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#201)
	- require(bool)(token.transferFrom(owner,msg.sender,staker[msg.sender].tokens * stakePercentage * 100 / 10000)) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#202)
	Event emitted after the call(s):
	- tokensRedeemed(msg.sender,staker[msg.sender].tokens,staker[msg.sender].tokens * stakePercentage * 100 / 10000) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#203)
Reentrancy in Staking.startStaking() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#187-193):
	External calls:
	- require(bool)(token.transferFrom(msg.sender,address(this),stakeTokens + findOnePercent(stakeTokens))) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#189)
	Event emitted after the call(s):
	- stakingstarted(msg.sender,staker[msg.sender].tokens,staker[msg.sender].time) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Staking.redeem() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#197-206) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(staker[msg.sender].time + stakeTime <= now) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#200)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Reentrancy in Staking.sendToWinner_unchk20() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#126-130):
	External calls:
	- winner_unchk20.send(winAmount_unchk20) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#128)
	State variables written after the call(s):
	- payedOut_unchk20 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#129)
Reentrancy in Staking.sendToWinner_unchk32() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#137-141):
	External calls:
	- winner_unchk32.send(winAmount_unchk32) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#139)
	State variables written after the call(s):
	- payedOut_unchk32 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#140)
Reentrancy in Staking.sendToWinner_unchk44() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#225-229):
	External calls:
	- winner_unchk44.send(winAmount_unchk44) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#227)
	State variables written after the call(s):
	- payedOut_unchk44 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#228)
Reentrancy in Staking.sendToWinner_unchk8() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#181-185):
	External calls:
	- winner_unchk8.send(winAmount_unchk8) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#183)
	State variables written after the call(s):
	- payedOut_unchk8 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol#184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_42.sol analyzed (4 contracts with 7 detectors), 9 result(s) found
