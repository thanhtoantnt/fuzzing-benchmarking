Compilation warnings/errors on benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:14:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:42:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk20.send(winAmount_unchk20);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:61:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk32.send(winAmount_unchk32);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:73:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk44.send(winAmount_unchk44);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:91:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:95:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (42 ether); }
       ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:107:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        msg.sender.send(address(this).balance);
        ^------------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:120:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:129:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk46.send(subpot_unchk46);  //bug
        ^---------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:216:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:253:5: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    callee.send(5 ether);
    ^------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:285:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        winner_unchk8.send(winAmount_unchk8);
        ^----------------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:294:8: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      {addr.send (4 ether); }
       ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:301:9: Warning: Return value of low-level calls not used.
        dst.call.value(msg.value)("");
        ^---------------------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:311:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        dst.send(msg.value);
        ^-----------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:127:23: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                      ^-------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:127:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
function cash_unchk46(uint roundIndex, uint subpotIndex, address payable winner_unchk46) public{
                                       ^--------------^
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol:110:1: Warning: Function state mutability can be restricted to pure
function callnotchecked_unchk13(address callee) public {
^ (Relevant source part starts here and spans across multiple lines).


WhiteBetting.placeBet(uint64,uint16,uint32) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#177-214) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now < (gameList[_fixtureId].timestamp - 600)) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#208)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Reentrancy in WhiteBetting.sendToWinner_unchk20() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#40-44):
	External calls:
	- winner_unchk20.send(winAmount_unchk20) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#42)
	State variables written after the call(s):
	- payedOut_unchk20 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#43)
Reentrancy in WhiteBetting.sendToWinner_unchk32() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#59-63):
	External calls:
	- winner_unchk32.send(winAmount_unchk32) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#61)
	State variables written after the call(s):
	- payedOut_unchk32 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#62)
Reentrancy in WhiteBetting.sendToWinner_unchk44() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#71-75):
	External calls:
	- winner_unchk44.send(winAmount_unchk44) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#73)
	State variables written after the call(s):
	- payedOut_unchk44 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#74)
Reentrancy in WhiteBetting.sendToWinner_unchk8() (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#283-287):
	External calls:
	- winner_unchk8.send(winAmount_unchk8) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#285)
	State variables written after the call(s):
	- payedOut_unchk8 = true (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#286)
Reentrancy in WhiteBetting.withdraw(uint256) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#305-309):
	External calls:
	- owner.transfer(_amount) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#307)
	Event emitted after the call(s):
	- Withdraw(owner,_amount) (benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol#308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
benchmarks/SolidiFI/Unhandled-Exceptions/buggy_25.sol analyzed (1 contracts with 7 detectors), 6 result(s) found
