==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MindsyncPlatform
Function name: proposals(uint256)
PC address: 3900
Estimated Gas Usage: 1056 - 1151
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: Re-entrancy/buggy_36.sol:268

Proposal[] public proposals

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x0
Caller: [SOMEGUY], function: proposals(uint256), txdata: 0x013cf08b0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: MindsyncPlatform
Function name: callme_re_ent28()
PC address: 4276
Estimated Gas Usage: 7634 - 61915
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: Re-entrancy/buggy_36.sol:237

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40ac7230489e80004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x401810c0142057ffc, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x8ac7230489e80000
Caller: [ATTACKER], function: callme_re_ent28(), txdata: 0x0d5feff1, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: MindsyncPlatform
Function name: callme_re_ent42()
PC address: 4385
Estimated Gas Usage: 7656 - 61937
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: Re-entrancy/buggy_36.sol:39

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x40ac72704b5e8000c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x415800c05370720fe, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x8ac7230489e80000
Caller: [ATTACKER], function: callme_re_ent42(), txdata: 0x0f7219b0, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: MindsyncPlatform
Function name: callme_re_ent35()
PC address: 4494
Estimated Gas Usage: 7678 - 61959
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: Re-entrancy/buggy_36.sol:307

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x42141040500080002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40081080142077ffc, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x8ac7230489e80000
Caller: [ATTACKER], function: callme_re_ent35(), txdata: 0x1578e01e, value: 0x0

==== Unprotected Ether Withdrawal ====
SWC ID: 105
Severity: High
Contract: MindsyncPlatform
Function name: callme_re_ent14()
PC address: 4622
Estimated Gas Usage: 7722 - 62003
Any sender can withdraw Ether from the contract account.
Arbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.
--------------------
In file: Re-entrancy/buggy_36.sol:570

msg.sender.send(10 ether)

--------------------
Initial State:

Account: [CREATOR], balance: 0x41b83ab04b2100402, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x420b00c014207fffe, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , decoded_data: , value: 0x8ac7230489e80000
Caller: [ATTACKER], function: callme_re_ent14(), txdata: 0x1abf48c0, value: 0x0


